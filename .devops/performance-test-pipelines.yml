# azure-pipelines.yml
trigger: none

parameters:
  - name: "ENVIRONMENT"
    displayName: "Environment"
    type: string
    values:
      - "dev"
      - "uat"
    default: "uat"
  - name: "TEST_TYPE"
    displayName: "Test type"
    type: string
    values:
      - "load"
      - "spike"
      - "stress"
      - "constant"
    default: "constant"
  - name: "SCRIPT"
    displayName: "Script name"
    type: string
    values:
      - "receipt_service"
    default: "receipt_service"
  - name: "DB_NAME"
    displayName: "DB name"
    type: string
    values:
      - pagopa_receipt_pdf_datastorek6
variables:
  ${{ if eq(parameters['ENVIRONMENT'], 'dev') }}:
    poolImage: 'pagopa-dev-loadtest-linux'
    API_SUBSCRIPTION_KEY: "$(DEV_API_SUBSCRIPTION_KEY)"
    receiptCosmosSubscriptionKey : "$(DEV_RECEIPT_COSMOS_DB_SUBSCRIPTION_KEY)"
    blobStorageSubscriptionKey : "$(DEV_BLOB_STORAGE_SUBSCRIPTION_KEY)"
  ${{ if eq(parameters['ENVIRONMENT'], 'uat') }}:
    poolImage: 'pagopa-uat-loadtest-linux'
    API_SUBSCRIPTION_KEY: "$(UAT_API_SUBSCRIPTION_KEY)"
    receiptCosmosSubscriptionKey : "$(UAT_RECEIPT_COSMOS_DB_SUBSCRIPTION_KEY)"
    blobStorageSubscriptionKey : "$(UAT_BLOB_STORAGE_SUBSCRIPTION_KEY)"

pool:
  name: $(poolImage)

steps:
  - script: |
      cd ./performance-test/src
      docker pull grafana/k6
    displayName: Pull k6 image

  - script: |
      cd ./performance-test
      sh ./run_performance_test.sh ${{ parameters.ENVIRONMENT }} ${{ parameters.TEST_TYPE }} ${{ parameters.SCRIPT }} ${{ parameters.DB_NAME}} $COSMOS_RECEIPT_KEY $BLOB_STORAGE_KEY
    displayName: Run k6 ${{ parameters.SCRIPT }} on ${{ parameters.ENVIRONMENT }}
    env:
      COSMOS_RECEIPT_KEY: ${{ variables.receiptCosmosSubscriptionKey }}
      BLOB_STORAGE_KEY: ${{ variables.blobStorageSubscriptionKey }}
